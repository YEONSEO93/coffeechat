<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Write a Post</title>
    <link rel="stylesheet" href="/main.css">
    <script src="https://cdn.jsdelivr.net/npm/gif.js@0.2.0/dist/gif.min.js"></script>
    <script src="/js/main.js" defer></script>
</head>

<body>
    <%- include('nav.ejs') %>

        <div class="form-container">
            <h1>Write a Post</h1>
            <form id="postForm" action="/posts/add" method="POST" enctype="multipart/form-data">
                <input type="text" id="postTitle" name="title" placeholder="Title" required>
                <textarea id="postContent" name="content" placeholder="Content" required></textarea>

                <div class="file-upload-container" id="fileUploadContainer">
                    <input type="file" id="fileInput" name="img1" accept="image/*">
                    <div class="file-drag-area" id="fileDragArea">
                        <p>Drag & Drop your image here or click to select</p>
                        <img id="filePreview" src="" alt="Image Preview" style="display:none;">
                    </div>
                </div>

                <div class="gif-creation-container">
                    <h3>Create a GIF</h3>
                    <textarea id="gifText" placeholder="Enter your text here..."></textarea>
                    <button type="button" id="createGifBtn" class="btn">Create GIF</button>
                    <canvas id="gifCanvas" style="display:none;"></canvas>
                    <img id="gifPreview" class="gif-preview" style="display:none;" />
                    <div id="progressContainer" style="display:none;">
                        <p>Processing: <span id="progressPercentage">0%</span> | <span id="downloadSize">0 KB</span></p>
                        <progress id="progressBar" value="0" max="100"></progress>
                    </div>
                </div>

                <button type="submit" class="btn">Submit Post</button>
            </form>
        </div>

        <script>
            // JavaScript for handling file input, drag-and-drop, and GIF creation
            document.addEventListener('DOMContentLoaded', () => {
                const fileInput = document.getElementById('fileInput');
                const fileDragArea = document.getElementById('fileDragArea');
                const filePreview = document.getElementById('filePreview');
                const gifText = document.getElementById('gifText');
                const createGifBtn = document.getElementById('createGifBtn');
                const gifCanvas = document.getElementById('gifCanvas');
                const gifPreview = document.getElementById('gifPreview');
                const progressContainer = document.getElementById('progressContainer');
                const progressBar = document.getElementById('progressBar');
                const progressPercentage = document.getElementById('progressPercentage');
                const downloadSize = document.getElementById('downloadSize');

                fileInput.addEventListener('change', handleFileSelect);
                fileDragArea.addEventListener('dragover', handleDragOver);
                fileDragArea.addEventListener('drop', handleFileDrop);

                function handleFileSelect(event) {
                    const file = event.target.files[0];
                    if (file) {
                        filePreview.src = URL.createObjectURL(file);
                        filePreview.style.display = 'block';
                    }
                }

                function handleDragOver(event) {
                    event.preventDefault();
                    fileDragArea.classList.add('drag-over');
                }

                function handleFileDrop(event) {
                    event.preventDefault();
                    fileDragArea.classList.remove('drag-over');
                    const file = event.dataTransfer.files[0];
                    if (file) {
                        filePreview.src = URL.createObjectURL(file);
                        filePreview.style.display = 'block';
                    }
                }

                createGifBtn.addEventListener('click', () => {
                    const gif = new GIF({
                        workers: 2,
                        quality: 10,
                        width: 400,
                        height: 300
                    });

                    gif.addFrame(gifCanvas, { delay: 500, copy: true });
                    gif.on('progress', (progress) => {
                        progressBar.value = progress * 100;
                        progressPercentage.textContent = `${Math.round(progress * 100)}%`;
                    });

                    gif.on('finished', (blob) => {
                        gifPreview.src = URL.createObjectURL(blob);
                        gifPreview.style.display = 'block';
                    });

                    gif.render();
                });
            });
        </script>
</body>

</html>